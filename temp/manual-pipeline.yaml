---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: ci-pipeline
spec:
  params:
    - name: repository
      description: the git repo
    - name: branch
      description: branch
      default: "main"
    - name: revision
      description: the git revision/commit for the git repo
      default: ""
    - name: commit-id
      description: commit id
      default: ""
    - name: commit-timestamp
      description: commit timestamp
      default: ""
    - name: pipeline-debug
      description: toggles debug mode for the pipeline
      default: "1"
    - name: project-id
      description: project id
      default: ""
    - name: scm-type
      description: source code type used (github, github-ent, gitlab)
      default: "github"
    - name: tf-dir
      description: the directory where the terraform main entry file is found
      default: ""
    - name: policy-config-json
      description: Configure policies to control thresholds
      default: ""
    - name: tf-var-file
      description: (optional) terraform var-file
      default: ""
  workspaces:
    - name: artifacts

  tasks:
    - name: extract-repository-url
      taskRef:
        name: toolchain-extract-value
      params:
        - name: expression
          # if a params.repository is given, it takes precedence
          value: '. as $toolchain | ["$(params.repository)"] | if .[0]=="" then $toolchain | .services[] | select(.toolchain_binding.name=="repo") | .dashboard_url else .[0] end'
        - name: pipeline-debug
          value: $(params.pipeline-debug)
    - name: cra-fetch-repo
      taskRef:
        name: git-clone-repo
      params:
        - name: continuous-delivery-context-secret
          value: "secure-properties"
        - name: ibmcloud-apikey-secret-key
          value: "apikey"
        - name: repository
          value: $(tasks.extract-repository-url.results.extracted-value)
        - name: branch
          value: $(params.branch)
        - name: revision
          value: $(params.revision)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      workspaces:
        - name: output
          workspace: artifacts
    - name: cra-discovery-scan
      runAfter:
        - cra-fetch-repo
      taskRef:
        name: cra-discovery
      workspaces:
        - name: artifacts
          workspace: artifacts
      params:
        - name: repository
          value: $(tasks.extract-repository-url.results.extracted-value)
        - name: revision
          value: $(tasks.cra-fetch-repo.results.git-branch)
        - name: commit-id
          value: $(tasks.cra-fetch-repo.results.git-commit)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
        - name: directory-name
          value: ""
        - name: commit-timestamp
          value: "timestamp"

    - name: cra-vulnerability-scan
      runAfter:
        - cra-discovery-scan
      taskRef:
        name: cra-vulnerability-remediation
      workspaces:
        - name: artifacts
          workspace: artifacts
        - name: secrets
          workspace: artifacts
      params:
        - name: repository
          value: $(tasks.extract-repository-url.results.extracted-value)
        - name: revision
          value: $(tasks.cra-fetch-repo.results.git-branch)
        - name: commit-id
          value: $(tasks.cra-fetch-repo.results.git-commit)
        - name: scm-type
          value: $(params.scm-type)
        - name: project-id
          value: $(params.project-id)
        - name: pipeline-debug
          value: $(params.pipeline-debug)

    - name: cra-cis-check
      taskRef:
        name: cra-cis-check
      runAfter:
        - cra-discovery-scan
      workspaces:
        - name: secrets
          workspace: artifacts
        - name: artifacts
          workspace: artifacts
      params:
        - name: repository
          value: $(tasks.extract-repository-url.results.extracted-value)
        - name: revision
          value: $(tasks.cra-fetch-repo.results.git-branch)
        - name: commit-id
          value: $(tasks.cra-fetch-repo.results.git-commit)
        - name: directory-name
          value: ""
        - name: scm-type
          value: $(params.scm-type)
        - name: project-id
          value: $(params.project-id)
        - name: pipeline-debug
          value: $(params.pipeline-debug)

    - name: cra-bom
      taskRef:
        name: cra-bom
      runAfter:
        - cra-discovery-scan
      workspaces:
        - name: artifacts
          workspace: artifacts
        - name: secrets
          workspace: artifacts
      params:
        - name: repository
          value: $(tasks.extract-repository-url.results.extracted-value)
        - name: revision
          value: $(tasks.cra-fetch-repo.results.git-branch)
        - name: commit-id
          value: $(tasks.cra-fetch-repo.results.git-commit)
        - name: scm-type
          value: $(params.scm-type)
        - name: project-id
          value: $(params.project-id)
        - name: pipeline-debug
          value: $(params.pipeline-debug)

    - name: cra-terraform-scan
      runAfter:
        - cra-fetch-repo
      taskRef:
        name: cra-terraform-scan
      workspaces:
        - name: artifacts
          workspace: artifacts
        - name: secrets
          workspace: artifacts
      params:
        - name: repository
          value: $(tasks.extract-repository-url.results.extracted-value)
        - name: branch
          value: $(tasks.cra-fetch-repo.results.git-branch)
        - name: scm-type
          value: $(params.scm-type)
        - name: project-id
          value: $(params.project-id)
        - name: directory-name
          value: ""
        - name: pipeline-debug
          value: $(params.pipeline-debug)
        - name: tf-dir
          value: $(params.tf-dir)
        - name: policy-config-json
          value: $(params.policy-config-json)
        - name: tf-var-file
          value: $(params.tf-var-file)

    - name: cra-reporter
      runAfter:
        - cra-terraform-scan
      taskRef:
        name: cra-reporter
      workspaces:
        - name: artifacts
          workspace: artifacts
        - name: secrets
          workspace: artifacts
      params:
        - name: repository
          value: $(tasks.extract-repository-url.results.extracted-value)
        - name: evidence-store
          value: $(tasks.cra-terraform-scan.results.evidence-store)
